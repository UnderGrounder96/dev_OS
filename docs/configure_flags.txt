# Configure flags
## Explanation from buildyourownlinux

--------------------------------------------------- Stage 1 --------------------------------------------------------------------

../binutils-*/configure      \
  --prefix=/tools            \
  --with-sysroot=$BROOT      \
  --target=$BTARGET          \
  --disable-nls              \
  --disable-werror

prefix :: Tells the configure script where the compiled binaries should be installed.
with-sysroot :: Tells the configure script to look in the specified directory for the target system libraries.
target :: Because the triplet we've defined is slightly different than what will be determined by configure itself, the binutils source needs to be compiled to accommodate cross-linking. This is necessary because we want to ensure a "clean room" build, without any artifacts from the build system.
disable-els :: Disables internationalization, which we don't need at this stage.
disable-werror :: Keeps warnings from interrupting the compile process.
------------------------------------------------------------------------------------------------------------------------------

../gcc-*/configure --prefix=/tools                   \
      --with-sysroot=$BROOT                          \
      --target=$BTARGET                              \
      --with-glibc-version=2.11                      \
      --with-newlib                                  \
      --without-headers                              \
      --enable-initfini-array                        \
      --disable-nls                                  \
      --disable-shared                               \
      --disable-multilib                             \
      --disable-decimal-float                        \
      --disable-threads                              \
      --disable-libatomic                            \
      --disable-libgomp                              \
      --disable-libquadmath                          \
      --disable-libssp                               \
      --disable-libvtv                               \
      --disable-libstdcxx                            \
      --enable-languages=c,c++

target :: Tells make to use the target triplet located in our environment variable.
prefix :: Instructs make to use the specified path to prefix relative pathnames.kss
with-glibc-version :: Indicates which version of glibc we're going to target.
with-sysroot :: Specifies the system root and allows us to specify a different
root path than that of the currently-running kernel.
with-newlib :: Prevents any code which requires libc from being compiled (because we haven't built libc yet).
without-headers :: If building a full-blown cross-compiler, GCC needs the header files compatible with the target system. This argument instructs configure and make not to look for them, as we don't need them for this stage.
enable-initfini-array:: This switch forces the use of some internal data structures that are needed but cannot be detected when building
disable-shared :: Advises GCC to avoid performing static linking. This is a good idea simply because it avoids any conflicts that might arise if GCC were built to use shared libraries, as the system linker might attempt to link them with the libraries installed on the build system.
disable-decimal :: This GCC extension is not compatible when building GCC for cross compilation.
a cross compiler.
--disable-decimal-float, --disable-threads, --disable-libatomic, --disablelibgomp, --disable-libquadmath, --disable-libssp, --disable-libvtv, --disablelibstdcxx::
These switches disable support for the decimal floating point extension, threading, libatomic, libgomp, libquadmath, libssp, libvtv, and the C++ standard library respectively.
These features will fail to compile when building a cross-compiler and are not necessary for the task of cross-compiling the temporary libc
disable-multilib :: This functionality isn't supported on the x86_64 platform.
enable-languages :: For this stage, we need GCC to compile only C and C++. This disables the compilation of compilers for other languages.
------------------------------------------------------------------------------------------------------------------------------

../glibc-*/configure --prefix=/usr          \
      --host=$BTARGET                       \
      --build=$(../scripts/config.guess)    \
      --enable-kernel=3.2                   \
      --with-headers=$BROOT/usr/include     \
      libc_cv_slibdir=/usr/lib

prefix :: Instructs make to use the specified path to prefix's relative pathnames.
host :: Tells make to use the target triplet located in our environment variable.
build :: Combined with the host flag, this instructs glibc's build system to configure itself to cross compile, using the cross-linker and compiler in /usr.
enable-kernel :: Instructs glibc to use workarounds for this specific version (and later) of the kernel.
with-headers :: Specifies the location of header files, so libc knows what features the kernel has and can configure itself accordingly.
libc_cv_slibdir :: This ensures that the library is installed in /usr/lib instead of the default /lib64 on 64 bit machines.
------------------------------------------------------------------------------------------------------------------------------

../gcc-*/libstdc++-v3/configure --prefix=/usr    \
      --host=$BTARGET                            \
      --build=$(../config.guess)                 \
      --disable-multilib                         \
      --disable-nls                              \
      --disable-libstdcxx-pch                    \
      --with-gxx-include-dir=/tools/$BTARGET/include/c++/11.2.0

host :: Specifies the use the cross compiler we have just built instead of the one in /usr/bin.
disable-libstdcxx-pch :: This switch prevents the installation of precompiled include files, which are not needed at this stage.
with-gxx-include-dir :: This is the location where the C++ compiler should search for the standard include files. In a normal build, this information is automatically passed to the libstdc++ configure options from the top level directory. In our case, this information must be explicitly given.

./ncurses-*/configure --prefix=/usr \
      --host=$BTARGET               \
      --build=$(./config.guess)     \
      --mandir=/usr/share/man       \
      --with-manpage-format=normal  \
      --with-shared                 \
      --without-debug               \
      --without-ada                 \
      --without-normal              \
      --enable-widec

with-manpage-format :: This prevents Ncurses installing compressed manual pages, which may happen if the host distribution itself has compressed manual pages.
without-ada :: This ensures that Ncurses does not build support for the Ada compiler which may be present on the host but will not be available once we enter the chroot environment.
enable-widec :: This switch causes wide-character libraries (e.g., libncursesw.so.6.2) to be built instead of normal ones (e.g., libncurses.so.6.2). These wide-character libraries are usable in both multibyte and traditional 8-bit locales, while normal libraries work properly only in 8-bit locales. Wide-character and normal libraries are source-compatible, but not binary-compatible.
without-normal ::This switch disables building and installing most static libraries.

--------------------------------------------------- Stage 2 --------------------------------------------------------------------

export CC=$BTARGET-gcc
export AR=$BTARGET-ar
export RANLIB=$BTARGET-ranlib

../binutils-2.36.1/configure \
  --prefix=/tools            \
  --disable-nls              \
  --disable-werror           \
  --with-lib-path=/tools/lib \
  --with-sysroot

with-sysroot :: Specifying no value here enables the linker to find shared libraries required by other objects. Without this flag, make may not be able to locate and link some required libraries.
with-lib-path :: Here we're instructing make to use the specified directory explicitly.
------------------------------------------------------------------------------------------------------------------------------

PKG_CONFIG= ./util-linux-*.*.*/configure --prefix=/tools \
  --without-python                      \
  --disable-makeinstall-chown           \
  --without-systemdsystemunitdir

without-python :: This disables the Python bindings, which we don't need at this point.
disable-makeinstall-chown :: make tries to change the owner of the binaries after copying them into place. This requires root permissions, however, so we disable this.
without-systemdsystemunitdir :: This instructs make to skip the installation of systemd-specific files.
